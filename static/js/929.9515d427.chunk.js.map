{"version":3,"file":"static/js/929.9515d427.chunk.js","mappings":"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","sources":["components/Form/Form.styled.js","components/Form/Form.jsx","components/Filter/Filter.jsx","components/ContactListItem/ContactListItem.styled.js","components/ContactListItem/ContactListItem.jsx","components/ContactsList/ContactsList.styled.js","components/ContactsList/ContactsList.jsx","components/Contacts/Contacts.jsx","Pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ContactForm = styled.form`\n  display: inline-flex;\n  flex-direction: column;\n  align-items: center;\n`;\nexport const Label = styled.label`\n  margin-bottom: 10px;\n`;\nexport const ButtonAdd = styled.button`\n  border-color: rgb(14, 49, 230);\n  border-radius: 5px;\n`;\n\nexport const Input = styled.input`\n  margin-left: 5px;\n`;\nexport const AddingLoader = styled.span`\n  display: flex;\n`;\n","// import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport {\n  ContactForm,\n  Label,\n  ButtonAdd,\n  Input,\n  AddingLoader,\n} from './Form.styled';\nimport { useFetchContactsQuery, useAddContactMutation } from 'redux/contacts';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addName, addNumber, getName, getNumber } from '../../redux/contacts';\n\nimport Loader from 'components/Loader';\n\nimport Notiflix from 'notiflix';\n\nfunction Form() {\n  const { data: baseList } = useFetchContactsQuery();\n  const [addContact, { isLoading: isAdding }] = useAddContactMutation();\n  const dispatch = useDispatch();\n  const nameValue = useSelector(getName);\n  const numberValue = useSelector(getNumber);\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  // const reset = () => {\n  //   setName('');\n  //   setPhone('');\n  // };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const objWithId = { number, name };\n    formSubmitHandler(objWithId);\n  };\n\n  const formSubmitHandler = data => {\n    baseList.find(i => i.name.toLowerCase() === data.name.toLowerCase())\n      ? Notiflix.Notify.failure('That name already in the list', {\n          position: 'center-center',\n        })\n      : addContact(data) && dispatch(addName('')) && dispatch(addNumber(''));\n  };\n  const handleInput = e => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        dispatch(addName(value));\n        break;\n\n      case 'number':\n        setNumber(value);\n        dispatch(addNumber(value));\n        break;\n      default:\n        break;\n    }\n  };\n\n  return (\n    <ContactForm autoComplete=\"off\" onSubmit={handleSubmit}>\n      <Label>\n        <span>Name</span>\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={nameValue}\n          onChange={handleInput}\n        />\n      </Label>\n      <Label>\n        <span>Number</span>\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={numberValue}\n          onChange={handleInput}\n        />\n      </Label>\n      <ButtonAdd type=\"submit\" disabled={isAdding}>\n        {isAdding ? (\n          <AddingLoader>\n            Adding..... <Loader size={'small'} />\n          </AddingLoader>\n        ) : (\n          <span>Add contact</span>\n        )}\n      </ButtonAdd>\n    </ContactForm>\n  );\n}\n\nexport default Form;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { addFilter, getFilter } from '../../redux/contacts';\n\nconst Filter = ({ title }) => {\n  const dispatch = useDispatch();\n  const filterValue = useSelector(getFilter);\n\n  const filterHandler = e => {\n    dispatch(addFilter(e.currentTarget.value.toLowerCase()));\n  };\n  return (\n    <div>\n      <h3>{title}</h3>\n      <label>\n        <input\n          type=\"text\"\n          placeholder=\"add something\"\n          onChange={filterHandler}\n          value={filterValue}\n        />\n      </label>\n    </div>\n  );\n};\n\nexport default Filter;\n\nFilter.protoTypes = {\n  title: PropTypes.string.isRequired,\n  filter: PropTypes.func.isRequired,\n  filterValue: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const ButtonDelete = styled.button`\n  margin-left: 5px;\n`;\n\nexport const List = styled.li`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: stretch;\n  margin-bottom: 5px;\n`;\nexport const Number = styled.span`\n  display: inline-block;\n  margin-left: auto;\n  padding-left: 10px;\n`;\nexport const TitleStyle = styled.span`\n  color: blue;\n`;\nexport const ValueStyle = styled.span`\n  font-weight: bold;\n  margin-left: 10px;\n`;\n\nexport const RemovingLoader = styled.span`\n  display: flex;\n`;\n","import {\n  List,\n  Number,\n  ValueStyle,\n  ButtonDelete,\n  TitleStyle,\n  RemovingLoader,\n} from './ContactListItem.styled';\nimport { useDeleteContactMutation } from 'redux/contacts';\nimport Loader from '../Loader';\n\nconst ContactListItem = ({ id, name, number }) => {\n  const [deleteContact, result] = useDeleteContactMutation();\n  const { isLoading: isDeleting } = result;\n  return (\n    <List>\n      <span>\n        <TitleStyle>Name:</TitleStyle>\n        <ValueStyle> {name}</ValueStyle>\n      </span>\n      <Number>\n        <TitleStyle>Number:</TitleStyle>\n        <ValueStyle>{number}</ValueStyle>\n      </Number>\n      <ButtonDelete\n        type=\"button\"\n        onClick={() => deleteContact(id)}\n        disabled={isDeleting}\n      >\n        {isDeleting ? (\n          <RemovingLoader>\n            removing... <Loader size={'small'} />\n          </RemovingLoader>\n        ) : (\n          <span>delete</span>\n        )}\n      </ButtonDelete>\n    </List>\n  );\n};\nexport default ContactListItem;\n","import styled from 'styled-components';\n\nexport const Ul = styled.ul`\n  list-style: none;\n  padding-left: 0px;\n`;\nexport const ButtonDelete = styled.button`\n  margin-left: 5px;\n`;\n\nexport const List = styled.li`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: stretch;\n  margin-bottom: 5px;\n`;\nexport const Number = styled.span`\n  display: inline-block;\n  margin-left: auto;\n  padding-left: 10px;\n`;\nexport const TitleStyle = styled.span`\n  color: blue;\n`;\nexport const ValueStyle = styled.span`\n  font-weight: bold;\n  margin-left: 10px;\n`;\n","import { useFetchContactsQuery } from 'redux/contacts';\nimport { useSelector } from 'react-redux';\nimport { getFilter } from 'redux/contacts';\nimport Filter from '../Filter';\nimport Loader from '../Loader';\nimport ContactListItem from '../ContactListItem';\n\nimport { Ul, TitleStyle } from './ContactsList.styled';\n\nexport const ContactList = () => {\n  const { data, isFetching } = useFetchContactsQuery();\n\n  const filterValue = useSelector(getFilter);\n  let newData = [];\n\n  if (data) {\n    newData = data;\n  }\n\n  const filteredContacts = newData.filter(i =>\n    i.name.toLowerCase().includes(filterValue)\n  );\n\n  return (\n    <>\n      <h2>Contacts</h2>\n      {newData.length ? (\n        <Filter title={'Find contacts by name'} />\n      ) : (\n        <div></div>\n      )}\n      {isFetching && <Loader size={'large'} />}\n\n      <Ul>\n        {filteredContacts.length ? (\n          filteredContacts.map(item => {\n            return <ContactListItem key={item.id} {...item} />;\n          })\n        ) : (\n          <div>\n            {filterValue ? (\n              <span>\n                No contacts <TitleStyle>found</TitleStyle>\n              </span>\n            ) : (\n              <span>\n                No contacts <TitleStyle>yet</TitleStyle>\n              </span>\n            )}\n          </div>\n        )}\n      </Ul>\n    </>\n  );\n};\n","import { ContactList } from 'components/ContactsList/ContactsList';\n\nexport const Contacts = () => {\n  return (\n    <div>\n      <ContactList />\n    </div>\n  );\n};\n","import Form from '../../components/Form';\nimport { Contacts } from '../../components/Contacts';\nimport styled from 'styled-components';\n\nconst Section = styled.div`\n  display: inline-flex;\n  flex-direction: column;\n  border: 1px solid aqua;\n  min-width: 500px;\n  box-shadow: 33px 14px 33px 10px rgba(14, 178, 230, 0.75);\n  margin-left: 40px;\n  margin-top: 30px;\n  padding: 20px;\n`;\n\nexport default function ContactsContainer() {\n  return (\n    <Section>\n      <Form />\n      <Contacts />\n    </Section>\n  );\n}\n"],"names":["ContactForm","styled","Label","ButtonAdd","Input","AddingLoader","baseList","useFetchContactsQuery","data","useAddContactMutation","addContact","isAdding","isLoading","dispatch","useDispatch","nameValue","useSelector","getName","numberValue","getNumber","useState","name","setName","number","setNumber","formSubmitHandler","find","i","toLowerCase","Notiflix","position","addName","addNumber","handleInput","e","currentTarget","value","autoComplete","onSubmit","preventDefault","type","pattern","title","required","onChange","disabled","Loader","size","Filter","filterValue","getFilter","placeholder","addFilter","protoTypes","PropTypes","filter","ButtonDelete","List","Number","TitleStyle","ValueStyle","RemovingLoader","id","useDeleteContactMutation","deleteContact","isDeleting","onClick","Ul","ContactList","isFetching","newData","filteredContacts","includes","length","map","item","Contacts","Section","ContactsContainer"],"sourceRoot":""}