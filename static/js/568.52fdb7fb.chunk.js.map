{"version":3,"file":"static/js/568.52fdb7fb.chunk.js","mappings":"gOAEaA,EAAOC,EAAAA,GAAAA,KAAH,iGAKJC,EAAID,EAAAA,GAAAA,EAAH,oEAIDE,EAAYF,EAAAA,GAAAA,OAAH,6C,uCC0FtB,EA/FqB,WACnB,OAAwBG,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACMC,GAAWC,EAAAA,EAAAA,MAWXC,EAAoB,SAAC,GAA+B,IAA7BR,EAA4B,EAA5BA,KAAME,EAAsB,EAAtBA,MAAOE,EAAe,EAAfA,SAOxCE,EAASG,EAAAA,EAAAA,SAAwB,CAAET,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,IAEjD,EAEKM,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,cAAlBZ,EAAR,EAAQA,KAAMa,EAAd,EAAcA,MAEd,OAAQb,GACN,IAAK,OACHC,EAAQY,GAER,MAEF,IAAK,QACHV,EAASU,GAET,MAEF,IAAK,WACHR,EAAYQ,GAMjB,EAED,OACE,UAAClB,EAAD,CAAMmB,SAxCa,SAAAH,GACnBA,EAAEI,iBAEFP,EADiB,CAAER,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,GAEjC,EAoCC,WACE,8BACE,SAACP,EAAD,oBACA,kBACEmB,KAAK,OACLhB,KAAK,OAGLiB,UAAQ,EACRJ,MAAOb,EACPkB,SAAUR,QAGd,8BACE,SAACb,EAAD,8CACA,kBACEmB,KAAK,QACLhB,KAAK,QACLmB,QAAQ,2CACRC,MAAM,mCACNH,UAAQ,EACRJ,MAAOX,EACPgB,SAAUR,QAGd,8BACE,SAACb,EAAD,wBACA,kBACEmB,KAAK,WACLhB,KAAK,WACLqB,UAAU,SACVC,UAAU,IACVC,UAAU,KAGVN,UAAQ,EACRJ,MAAOT,EACPc,SAAUR,QAGd,SAACZ,EAAD,CAAWkB,KAAK,SAAhB,4BAGL,C","sources":["Pages/Registration/Registration.styled.js","Pages/Registration/Registration.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n`;\nexport const P = styled.p`\n  margin-top: 10px;\n  margin-bottom: 5px;\n`;\nexport const RegButton = styled.button`\n  margin-top: 10px;\n`;\n","import { Form, P, RegButton } from './Registration.styled';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport authOperations from '../../redux/auth-operations';\n// import { useCreateUserMutation } from 'redux/auth-createApi';\n\nconst Registration = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n\n  // const [createUser] = useCreateUserMutation();\n\n  // const { data: baseList } = useFetchUsersQuery();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const formData = { name, email, password };\n    formSubmitHandler(formData);\n  };\n  const formSubmitHandler = ({ name, email, password }) => {\n    // baseList.find(i => i.name.toLowerCase() === data.name.toLowerCase())\n    //   ? Notiflix.Notify.failure('That name already in the list', {\n    //       position: 'center-center',\n    //     })\n    // :\n\n    dispatch(authOperations.register({ name, email, password }));\n    // createUser(data);\n  };\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n\n        break;\n\n      case 'email':\n        setEmail(value);\n\n        break;\n\n      case 'password':\n        setPassword(value);\n\n        break;\n      default:\n        break;\n    }\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <label>\n        <P>Name</P>\n        <input\n          type=\"text\"\n          name=\"name\"\n          // pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          // title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          onChange={handleChange}\n        />\n      </label>\n      <label>\n        <P>Почта</P>\n        <input\n          type=\"email\"\n          name=\"email\"\n          pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"\n          title=\"please enter valid email address\"\n          required\n          value={email}\n          onChange={handleChange}\n        />\n      </label>\n      <label>\n        <P>Password</P>\n        <input\n          type=\"password\"\n          name=\"password\"\n          inputMode=\"number\"\n          minLength=\"7\"\n          maxLength=\"12\"\n          // pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*_=+-]).{7,12}$\"\n          // title=\"(At least one lowercase letter(a - z).At least one uppercase letter(A - Z).At least one numeric value(0-9).At least one special symbol(!@#$%^&*=+-_).The total length should be greater than or equal to 6 and less or equal to 12.\"\n          required\n          value={password}\n          onChange={handleChange}\n        />\n      </label>\n      <RegButton type=\"submit\">Registration</RegButton>\n    </Form>\n  );\n};\n\nexport default Registration;\n"],"names":["Form","styled","P","RegButton","useState","name","setName","email","setEmail","password","setPassword","dispatch","useDispatch","formSubmitHandler","authOperations","handleChange","e","currentTarget","value","onSubmit","preventDefault","type","required","onChange","pattern","title","inputMode","minLength","maxLength"],"sourceRoot":""}